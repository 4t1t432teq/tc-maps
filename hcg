-- SERVICES
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local localPlayer = Players.LocalPlayer

-- DESTROY OLD GUI
local oldGui = localPlayer:FindFirstChild("PlayerGui"):FindFirstChild("RetroCRTGui")
if oldGui then oldGui:Destroy() end

-- CREATE GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RetroCRTGui"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.Parent = localPlayer:WaitForChild("PlayerGui")

-- BOOT FRAME
local bootFrame = Instance.new("Frame")
bootFrame.Size = UDim2.new(1, 0, 1, 0)
bootFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
bootFrame.BorderSizePixel = 0
bootFrame.Parent = screenGui

local bootLabel = Instance.new("TextLabel")
bootLabel.Size = UDim2.new(1, 0, 1, 0)
bootLabel.BackgroundTransparency = 1
bootLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
bootLabel.Font = Enum.Font.Code
bootLabel.Text = ""
bootLabel.TextScaled = true
bootLabel.TextWrapped = true
bootLabel.Parent = bootFrame

-- TYPEWRITER EFFECT
local function typeWrite(text, delayPerChar)
	for i = 1, #text do
		bootLabel.Text = string.sub(text, 1, i)
		task.wait(delayPerChar)
	end
end

-- MAIN GUI FRAME (HIDDEN INITIALLY)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0.5, 0, 0.6, 0)
mainFrame.Position = UDim2.new(0.25, 0, 0.2, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BorderSizePixel = 4
mainFrame.BorderColor3 = Color3.fromRGB(0, 255, 0)
mainFrame.Visible = false
mainFrame.Active = true
mainFrame.Parent = screenGui

local scaler = Instance.new("UIScale", mainFrame)
scaler.Scale = 1

-- SCANLINE ANIMATION
local scanline = Instance.new("ImageLabel")
scanline.BackgroundTransparency = 1
scanline.Size = UDim2.new(1, 0, 1, 0)
scanline.Image = "rbxassetid://13822115542" -- public scanlines
scanline.ImageTransparency = 0.7
scanline.ZIndex = 10
scanline.TileSize = UDim2.new(1, 0, 1, 0)
scanline.Parent = mainFrame

-- TWEENING SCANLINE ANIMATION
task.spawn(function()
	while true do
		scanline.Position = UDim2.new(0, 0, -1, 0)
		TweenService:Create(scanline, TweenInfo.new(5, Enum.EasingStyle.Linear), {
			Position = UDim2.new(0, 0, 1, 0)
		}):Play()
		task.wait(5)
	end
end)

-- TITLE
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0.15, 0)
title.BackgroundTransparency = 1
title.Text = "== RETRO MENU =="
title.Font = Enum.Font.Arcade
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(0, 255, 0)
title.Parent = mainFrame

-- STATUS TEXT
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, 0, 0.1, 0)
statusLabel.Position = UDim2.new(0, 0, 0.9, 0)
statusLabel.BackgroundTransparency = 0.2
statusLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
statusLabel.BorderSizePixel = 0
statusLabel.Text = ""
statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.Arcade
statusLabel.Visible = false
statusLabel.Parent = mainFrame

-- FUNCTION TO SHOW STATUS
local function showStatus(message)
	statusLabel.Text = message
	statusLabel.Visible = true
	statusLabel.TextTransparency = 0
	TweenService:Create(statusLabel, TweenInfo.new(0.5), {TextTransparency = 0}):Play()
	task.delay(3, function()
		TweenService:Create(statusLabel, TweenInfo.new(1), {TextTransparency = 1}):Play()
		task.wait(1)
		statusLabel.Visible = false
	end)
end

-- BUTTONS
local buttons = {"IY", "DEX", "RSPY"}
local buttonActions = {
	IY = function()
		showStatus("Loading Infinite Yield...")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
	end,
	DEX = function()
		showStatus("Loading Dex Explorer...")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/infy-sys/Dex/master/source.lua"))()
	end,
	RSPY = function()
		showStatus("Loading RemoteSpy...")
		loadstring(game:HttpGet("https://raw.githubusercontent.com/exxtremestuffs/SimpleSpySource/master/SimpleSpy.lua"))()
	end,
}

local uiButtons = {}

for i, label in ipairs(buttons) do
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0.8, 0, 0.15, 0)
	button.Position = UDim2.new(0.1, 0, 0.2 + (i - 1) * 0.2, 0)
	button.BackgroundColor3 = Color3.fromRGB(255, 0, 255)
	button.BorderColor3 = Color3.fromRGB(0, 255, 0)
	button.BorderSizePixel = 2
	button.Text = label
	button.Font = Enum.Font.Arcade
	button.TextScaled = true
	button.TextColor3 = Color3.fromRGB(0, 0, 0)
	button.Visible = false
	button.Parent = mainFrame

	button.MouseEnter:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.1), {
			BackgroundColor3 = Color3.fromRGB(0, 255, 255)
		}):Play()
	end)
	button.MouseLeave:Connect(function()
		TweenService:Create(button, TweenInfo.new(0.1), {
			BackgroundColor3 = Color3.fromRGB(255, 0, 255)
		}):Play()
	end)
	button.MouseButton1Click:Connect(buttonActions[label])
	table.insert(uiButtons, button)
end

-- BOOT-UP SEQUENCE
task.spawn(function()
	typeWrite("INITIALIZING SYSTEM...", 0.05)
	task.wait(1)
	typeWrite("\nLOADING INTERFACE MODULES...", 0.05)
	task.wait(1)

	-- Flicker effect
	for i = 1, 3 do
		bootFrame.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
		task.wait(0.05)
		bootFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		task.wait(0.05)
	end

	-- Fade out
	TweenService:Create(bootFrame, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
	TweenService:Create(bootLabel, TweenInfo.new(1), {TextTransparency = 1}):Play()
	task.wait(1)
	bootFrame:Destroy()

	-- Show main GUI
	mainFrame.Visible = true
	for _, b in ipairs(uiButtons) do b.Visible = true end
end)

-- CUSTOM DRAG SUPPORT
local dragging, dragInput, dragStart, startPos

mainFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = mainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

mainFrame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)